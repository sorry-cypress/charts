{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sorry-cypress-helm.fullname" . }}-api
  labels:
    {{- include "sorry-cypress-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: {{ include "sorry-cypress-helm.fullname" . }}-api
  template:
    metadata:
      name: {{ include "sorry-cypress-helm.fullname" . }}-api
      labels:
        app: {{ include "sorry-cypress-helm.fullname" . }}-api
        {{- with .Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end}}
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      nodeSelector:
        {{ toYaml .Values.api.nodeSelector | nindent 8 }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- tpl . $ | nindent 8 }}
      {{- end }}
      {{- if .Values.api.priorityClassName }}
      priorityClassName: {{ .Values.api.priorityClassName }}
      {{- end }}
      containers:
      - env:
        - name: APOLLO_PLAYGROUND
          value: {{ .Values.api.enableApolloPlayground | quote }}
        - name: PAGE_ITEMS_LIMIT
          value: {{ .Values.api.pageItemsLimit | quote }}
        {{- if or (.Values.mongodb.internal_db.enabled) (.Values.mongodb.external_db.enabled) }}
        - name: MONGODB_DATABASE
          value: {{ .Values.mongodb.mongoDatabase }}
        - name: MONGODB_URI
        {{-  $defaultConnectionSecretName := include "sorry-cypress-helm.fullname" . | printf "%s-mongodbsecrets" }}
        {{-  $defaultConnectionSecretKey := "MONGODB_URI" }}
        {{- if .Values.mongodb.mongoSecretConnectionString.enableCustomSecret }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mongodb.mongoSecretConnectionString.secretName | default $defaultConnectionSecretName }}
              key: {{ .Values.mongodb.mongoSecretConnectionString.secretKey | default $defaultConnectionSecretKey }}
        {{- else if .Values.mongodb.mongoSecretConnectionString.enableSecret }}
          valueFrom:
            secretKeyRef:
              name: {{ $defaultConnectionSecretName }}
              key: {{ $defaultConnectionSecretKey }}
        {{- else if .Values.mongodb.mongoConnectionString }}
          value: {{ .Values.mongodb.mongoConnectionString }}
        {{ else }}
          value: "mongodb://{{ include "mongodb.hostname" . }}:{{ .Values.mongodb.service.port }}"
        {{- end }}
        {{- end }}
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        name: {{ include "sorry-cypress-helm.fullname" . }}-api
        ports:
        - containerPort: 4000
        resources:
          {{- toYaml .Values.api.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 4000
          periodSeconds: {{ .Values.api.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.api.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.api.readinessProbe.failureThreshold }}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
      {{- if .Values.api.initContainers }}
      initContainers:
      {{- include "common.tplvalues.render" (dict "value" .Values.api.initContainers "context" $) | nindent 8 }}
      {{- end  }}
{{- end }}
